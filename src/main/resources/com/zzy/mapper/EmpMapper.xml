<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zzy.mapper.EmpMapper">

<!--    insert emp expr-->
    <insert id="insertExpr">
        insert into emp_expr(emp_id, begin, end, company, job) values
        <foreach collection="lists" item="expr">
            (#{expr.empId},#{expr.empId},#{expr.begin},#{expr.end},#{expr.company},#{expr.job})
        </foreach>
    </insert>

<!--    update emp expr-->
    <update id="update">
        UPDATE emp
        <set>
            <if test="username != null and username != '' ">username = #{username},</if>
            <if test="password != null and password != ''">password = #{password},</if>
            <if test="name != null  and name != ''">name = #{name},</if>
            <if test="gender != null">gender = #{gender},</if>
            <if test="phone != null  and phone != ''">phone = #{phone},</if>
            <if test="job != null">job = #{job},</if>
            <if test="salary != null">salary = #{salary},</if>
            <if test="image != null and image != ''">image = #{image},</if>
            <if test="entryDate != null">entry_date = #{entryDate},</if>
            <if test="deptId != null">dept_id = #{deptId},</if>
        </set>
        WHERE id = #{id}
    </update>

    <!--    delete emp-->
    <delete id="deleteEmp">
        delete from emp where id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>


<!--    search emp according to different requirements-->
    <select id="search" resultType="com.zzy.pojo.Emp">
        select e.*, dept.name deptName
        from emp e left join dept
        on e.dept_id = dept.id
        <where>
            <if test="param.name != null and param.name != ''">
                e.name like concat('%',#{param.name},'%')
            </if>
            <if test="param.gender != null">
                and gender = #{param.gender}
            </if>
            <if test="param.begin != null and param.end != null">
                and entry_date between #{param.begin} and #{param.end}
            </if>
        </where>
<!--        limit #{start}, #{pageSize}-->
    </select>

    <resultMap id="empMap" type="com.zzy.pojo.Emp">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="name" property="name"/>
        <result column="gender" property="gender"/>
        <result column="phone" property="phone"/>
        <result column="job" property="job"/>
        <result column="salary" property="salary"/>
        <result column="image" property="image"/>
        <result column="entry_date" property="entryDate"/>
        <result column="dept_id" property="deptId"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <collection property="exprList" ofType="com.zzy.pojo.EmpExpr">
            <id column="ee_id" property="id"/>
            <result column="ee_emp_id" property="empId"/>
            <result column="begin" property="begin"/>
            <result column="end" property="end"/>
            <result column="company" property="company"/>
            <result column="ee_job" property="job"/>
        </collection>
    </resultMap>
<!--    search by id-->
    <select id="searchById" resultMap="empMap">
        select e.*,
        ee.id ee_id,
        ee.emp_id ee_emp_id,
        ee.begin,
        ee.end,
        ee.company,
        ee.job ee_job
        from emp e left join emp_expr ee on e.id = ee.emp_id
        where e.id = #{id};
    </select>
</mapper>